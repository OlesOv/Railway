@page "/weather"
@inject HttpClient Http

<PageTitle>Weather Forecast</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Style="text-align: center; margin-top: 20px;">
<MudText Typo="Typo.h3" GutterBottom="true" Color="Color.Tertiary" Align="Align.Center">Прогноз погоди</MudText>
<br />

<div style="display: flex; justify-content: center; align-items: center;">
<MudGrid Style="max-width: 400px;">
    <MudTextField @bind-Value="city" Placeholder="Введіть місто" Style=""/>
    <MudButton OnClick="GetWeather" Color="Color.Tertiary" Variant="Variant.Filled">Пошук</MudButton>
</MudGrid>
    </div>

<br />
<br />

@if (forecastList != null)
{
    @foreach (var group in forecastList.list.GroupBy(f => f.dt_txt.Split(' ')[0]))
    {
            <br />
        <MudText Typo="Typo.h5" GutterBottom="true">
            @DateTime.Parse(group.Key).ToString("dd.MM.yyyy")
        </MudText>

            <MudGrid Justify="Justify.Center" GutterSize="3">
            @foreach (var forecast in group.Take(8))
            {
                <MudItem xs="12" sm="6" md="3" lg="1">
                    <MudCard Style="height: 150px;">
                        <MudCardContent>
                            <MudText Typo="Typo.subtitle2">
                                @DateTime.Parse(forecast.dt_txt).ToString("HH:mm")
                            </MudText>                            
                            <img src="https://openweathermap.org/img/wn/@(forecast.weather[0].icon).png" alt="icon" />
                            <MudText>@Math.Round(forecast.main.temp) °C</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
        @*<MudDivider />*@
    }
}
</MudContainer>

<br />

<MudStack AlignItems="AlignItems.Center">
    <MudLink Href="https://openweathermap.org/" Color="Color.Tertiary" Underline="Underline.Always">Створено за допомогою OpenWeather</MudLink>
</MudStack>



@code {
    private string city = "Kyiv";
    private ForecastRoot? forecastList;

    private async Task GetWeather()
    {
        var apiKey = "5412f0f429a9841c48d4bdae725c0a89";
        var url = $"https://api.openweathermap.org/data/2.5/forecast?q={city}&lang=ua&appid={apiKey}&units=metric";
        forecastList = await Http.GetFromJsonAsync<ForecastRoot>(url);
    }

    public class WeatherInfo
    {
        public string description { get; set; }
        public string icon { get; set; }
    }

    public class Main
    {
        public double temp { get; set; }
        public double temp_min { get; set; }
        public double temp_max { get; set; }
    }

    public class ForecastItem
    {
        public List<WeatherInfo> weather { get; set; }
        public Main main { get; set; }
        public string dt_txt { get; set; } 
    }

    public class ForecastRoot
    {
        public List<ForecastItem> list { get; set; }
        public CityInfo city { get; set; }
    }

    public class CityInfo
    {
        public string name { get; set; }
        public string country { get; set; }
    }

}
